version: '2'

#here we create the volumes. We keep the same names for backup purposes
volumes:
  adguard:
    name: adguard
  npm:
    name: npm
  vaultwarden:
    name: vaultwarden

#we put all containers under the same network
networks:
  internal-network:
    external: true
    name: virtual_net

services:
#AdGuard - With AdGuard you surf the Web ad-free and safely. Blocks all kinds of ads, removes annoying web elements, saves traffic and speeds up page loading.
  adguard:
    container_name: adguardhome
    image: adguard/adguardhome
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - adguard:/opt/adguardhome/work
      - adguard:/opt/adguardhome/conf
    #    ports:
    #      - 53:53/tcp
    #      - 53:53/udp
    #      - 67:67/udp
    #      - 68:68/tcp
    #      - 68:68/udp
    #      - 3000:3000/tcp
    network_mode: host
    restart: always
  #This project was known as Bitwarden_RS and has been renamed to separate itself from the official Bitwarden server in the hopes of avoiding confusion and trademark/branding issues.
  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - ADMIN_TOKEN=${BW_TOKEN}
    volumes:
      - vaultwarden:/data
    ports:
      - 280:80
    networks:
      - internal-network
    restart: always
  #nginx-proxy-manager: Expose your services easily and securely.
  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - 'npm:/data'
      - 'npm:/etc/letsencrypt'
    networks:
      - internal-network
    restart: always
